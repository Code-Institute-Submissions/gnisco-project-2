{"filter":false,"title":"maps.js","tooltip":"/assets/js/maps.js","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":45,"column":3},"end":{"row":45,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"e3d058397f2bf2537d64b45c45c1730acbbc3edf","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":47,"column":0},"end":{"row":111,"column":5},"action":"remove","lines":["  // Build and add the search bar","  const card = document.createElement('div');","  const titleBar = document.createElement('div');","  const title = document.createElement('div');","  const container = document.createElement('div');","  const input = document.createElement('input');","  const options = {","    types: ['address'],","    componentRestrictions: {country: 'gb'},","  };","","  card.setAttribute('id', 'pac-card');","  title.setAttribute('id', 'title');","  title.textContent = 'Find the nearest store';","  titleBar.appendChild(title);","  container.setAttribute('id', 'pac-container');","  input.setAttribute('id', 'pac-input');","  input.setAttribute('type', 'text');","  input.setAttribute('placeholder', 'Enter an address');","  container.appendChild(input);","  card.appendChild(titleBar);","  card.appendChild(container);","  map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);","","  // Make the search bar into a Places Autocomplete search bar and select","  // which detail fields should be returned about the place that","  // the user selects from the suggestions.","  const autocomplete = new google.maps.places.autocomplete(input, options);","","  autocomplete.setFields(","      ['address_components', 'geometry', 'name']);","","  // Set the origin point when the user selects an address","  const originMarker = new google.maps.Marker({map: map});","  originMarker.setVisible(false);","  let originLocation = map.getCenter();","","  autocomplete.addListener('place_changed', async () => {","    originMarker.setVisible(false);","    originLocation = map.getCenter();","    const place = autocomplete.getPlace();","","    if (!place.geometry) {","      // User entered the name of a Place that was not suggested and","      // pressed the Enter key, or the Place Details request failed.","      window.alert('No address available for input: \\'' + place.name + '\\'');","      return;","    }","","    // Recenter the map to the selected address","    originLocation = place.geometry.location;","    map.setCenter(originLocation);","    map.setZoom(9);","    console.log(place);","","    originMarker.setPosition(originLocation);","    originMarker.setVisible(true);","","    // Use the selected address as the origin to calculate distances","    // to each of the store locations","    const rankedStores = await calculateDistances(map.data, originLocation);","    showStoresList(map.data, rankedStores);","","    return;","  });"],"id":3},{"start":{"row":46,"column":0},"end":{"row":47,"column":0},"action":"remove","lines":["",""]},{"start":{"row":45,"column":5},"end":{"row":46,"column":0},"action":"remove","lines":["",""]}]]},"timestamp":1579279188377}